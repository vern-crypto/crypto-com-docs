"use strict";(self.webpackChunkcrypto_com_docs=self.webpackChunkcrypto_com_docs||[]).push([[7594],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=l(n),u=o,f=m["".concat(p,".").concat(u)]||m[u]||d[u]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[m]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5916:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"Simple Example",sidebar_position:1},i="Simple Example",c={unversionedId:"defi-wallet/integrate-examples/simple",id:"defi-wallet/integrate-examples/simple",title:"Simple Example",description:"here's a simple example",source:"@site/docs/defi-wallet/integrate-examples/simple.md",sourceDirName:"defi-wallet/integrate-examples",slug:"/defi-wallet/integrate-examples/simple",permalink:"/crypto-com-docs/docs/defi-wallet/integrate-examples/simple",draft:!1,editUrl:"https://github.com/vern-crypto/crypto-com-docs/tree/main/docs/defi-wallet/integrate-examples/simple.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Simple Example",sidebar_position:1},sidebar:"defiWalletSidebar",previous:{title:"Integrate Examples",permalink:"/crypto-com-docs/docs/category/integrate-examples"},next:{title:"Integrating with Web3Model",permalink:"/crypto-com-docs/docs/defi-wallet/integrate-examples/web3model"}},p={},l=[],s={toc:l};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"simple-example"},"Simple Example"),(0,o.kt)("p",null,"here's a simple example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="App.jsx"',title:'"App.jsx"'},'import React from "react";\nimport Web3 from "web3";\nimport { DeFiWeb3Connector } from "@deficonnect/web3-connector";\n\nlet provider;\nlet web3;\nlet accounts = [];\nlet connector;\n\nexport function App(props) {\n  async function connect() {\n    if (!provider) {\n      connector = new DeFiWeb3Connector({\n        supportedChainIds: [1],\n        appName: "your app name",\n        chainType: "eth", // only support \'eth\' for DeFiWeb3Connector\n        chainId: "1", // for eth is 1\n        rpcUrls: {\n          1: "https://mainnet.infura.io/v3/INFURA_API_KEY",\n          25: "https://evm.cronos.org/", // cronos mainet\n        },\n        pollingInterval: 15000,\n      });\n      await connector.activate();\n      console.log("connector", connector);\n      const provider = await connector.getProvider();\n      console.log("provider", provider);\n      web3 = new Web3(provider);\n      const r = await provider.request({\n        method: "dc_sessionRequest",\n        params: [\n          {\n            peerMeta: { name: "test" },\n            chainId: "1",\n            chainType: "aptos",\n          },\n        ],\n      });\n      console.log("r", r);\n    }\n\n    accounts = await web3.eth.getAccounts();\n    print(`Wallet address: ${accounts[0].toLowerCase()}`);\n  }\n\n  async function deactivate() {\n    await connector.deactivate();\n    accounts = await web3.eth.getAccounts();\n    print(`Wallet address: ${accounts[0]}`);\n  }\n\n  function print(str) {\n    const p = document.createElement("p");\n    p.innerText = str;\n    document.getElementById("userWalletAddress").appendChild(p);\n  }\n\n  return (\n    <div className="App">\n      <h1>DeFi Connect - React Example</h1>\n      <h2>A basic example of using React with DeFi Connect</h2>\n\n      <div className="connect">\n        <button type="primary" onClick={connect}>\n          Connect\n        </button>\n      </div>\n\n      <div className="deactivate">\n        <button type="primary" onClick={deactivate}>\n          Deactivate\n        </button>\n      </div>\n\n      <pre id="userWalletAddress"></pre>\n    </div>\n  );\n}\n')))}m.isMDXComponent=!0}}]);